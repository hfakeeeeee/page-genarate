trigger: none

parameters:
  - name: appVersion
    displayName: "Application Version"
    type: string
    default: 1.0.3
  - name: imageTag
    displayName: "Image Tag"
    type: string
    default: $(BUILD_VERSION)

  - name: runUnitTest
    displayName: "Run Unit Test"
    type: boolean
    default: true
  - name: runStaticScan
    displayName: "Run SAST/OSA scan"
    type: boolean
    default: true

  - name: deployToDev
    displayName: "Deploy to Dev"
    type: boolean
    default: true
  - name: deployToSit
    displayName: "Deploy to Sit"
    type: boolean
    default: false
variables:
  - name: runUnitTest
    value: ${{ parameters.runUnitTest }}
  - name: runStaticScan
    value: ${{ parameters.runStaticScan }}

  - name: deployToDev
    value: ${{ parameters.deployToDev }}
  - name: deployToSit
    value: ${{ parameters.deployToSit }}
  - name: build-id-number
    value: $(build.buildnumber)
  - name: build_repository_name
    value: $(Build.Repository.Name)
  - name: image-tag
    value: ${{ parameters.imageTag }}
  - ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
      - name: BUILD_VERSION
        value: ${{parameters.appVersion}}-RELEASE-$(image-name)-build.$(build-id-number)
  - ${{ else }}:
      - name: BUILD_VERSION
        value: ${{parameters.appVersion}}-SNAPSHOT-$(image-name)-build.$(build-id-number)
  - name: image-name
    value: dhp-ai-web-builder-agent
  - name: JFROG_REGISTRY
    value: https://humana.jfrog.io/humana/api/npm/dha-npm-virtual/
  # Turn this value to true once the sonarqube project key is generate for the service.
  - name: sonarqubeAnalysis
    value: true
  - name: sonarqube-project-key
    value:
  - name: SecApi-application-id
    value:
  - group: dha-dhp-artifact
  - group: dhp-infra-admin-sp
  - template: variables.yml@templates
  - name: namespace
    value: plat
  - name: namespace_approval_gate
    value: eventbus
  - name: glapienvironment
    value:

pool:
  name: 'Linux-NextGen'

resources:
  repositories:
    - repository: templates
      type: git
      name: dhp-eventbus-azure-template
      ref: dhp-ai-mcp-server

stages:
  - template: python/template_ai_mcp_server.yml@templates
    parameters:
      glapienvironmentpar: ${{ variables.glapienvironment }}
      images:
        - name: 'dhp-ai-web-builder-agent'
          dockerfile_name: 'Dockerfile'
          job_name: ai_web_builder_agent
